# Enable the error check for each GL function call while capturing.
# When it is turned on, there are some performance penalties introduced.
# So I would suggest you to only turn it on for ill-implemented applications (debugging purpose).
EnableErrorCheck            false

# For fixing the bug: when tracing electopia, some vertex attribute array is enabled but is not active.
# There will be crash if we set this value to be false.
EnableActiveAttribCheck     true

# For debugging: when tracing, you can control by editing commands in tracercmd.cfg.
# Supported commands:
#   tofr <uint>             ------- render to frame <uint>, then wait for further commands
#  	snapfr <uint>           ------- render to frame <uint>, take a snapshot of the screen, then wait for further commands
#   snapdrawfr <uint>       ------- render to frame <uint>, take a snapshot of all the draw calls in frame <uint>, then wait for further commands
InteractiveIntercept        false

# If:
#     1. an application is captured on a more advanced device (support X_Ext)
#     2. this application can utilize this extension if the device support it
# then the generated trace file can not be replayed correctly on another device (doesn't 
# support X_Ext).
#
# In order to solve this problem, we added this feature in our interceptor.
# When the application queries about the supported extension, we can give it a fake one.
# The fake extension list can be configured below with keyword 'SupportedExtension'.
# This feature can be turned on with the keyword 'FilterSupportedExtension'.
#
# Please note that, if the device doesn't support all the extensions listed below,
# the content capturing will fail.
FilterSupportedExtension	false	

# The extensions that are supported for this interceptor.
# Please note that, if the device for content capturing doesn't support certain features that are listed below,
# an error message will be issued, and no trace file will be generated.
#
# The extensions listed below come from Galaxy S3
# GL_OES_depth24 & GL_ARM_mali_shader_binary are intentionally disabled.
#SupportedExtension          GL_OES_texture_npot
SupportedExtension          GL_OES_compressed_ETC1_RGB8_texture
#SupportedExtension          GL_OES_standard_derivatives
SupportedExtension          GL_OES_EGL_image
SupportedExtension          GL_OES_depth24
SupportedExtension          GL_ARM_rgba8
#SupportedExtension          GL_ARM_mali_shader_binary
#SupportedExtension          GL_OES_depth_texture
SupportedExtension          GL_OES_packed_depth_stencil
SupportedExtension          GL_EXT_texture_format_BGRA8888
#SupportedExtension          GL_EXT_blend_minmax
SupportedExtension          GL_OES_EGL_image_external
SupportedExtension          GL_OES_EGL_sync
SupportedExtension          GL_OES_rgb8_rgba8
SupportedExtension          GL_EXT_multisampled_render_to_texture
SupportedExtension          GL_EXT_discard_framebuffer
